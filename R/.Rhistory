rm(list = ls())
library(insight)
find_optimal <- function(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights){
df <- data.frame(0,0,0,0,0,0)
colnames(df) <- c('air_type(1 for cash)', 'cash_nights', 'point_nights', 'total_cost_after_reimb','total_out_of_pocket_cash', 'reimb_balance')
iter <- 0
for(air_type in 0:1){
air_cost <- air_type * air_cash + (1-air_type) * air_pv
for(cash_nights in 0:nights){
iter <- iter + 1
hotel_cost <- cash_nights*daily_hotel_cash + (nights - cash_nights) * daily_hotel_pv
total_cost_before <- air_cost + hotel_cost
total_cash_cost <- air_type * air_cash + cash_nights * daily_hotel_cash
total_cost_after <- total_cost_before - min(total_cash_cost, 1150)
df[iter,1] = air_type
df[iter,2] = cash_nights
df[iter,3] = nights - cash_nights
df[iter,4] = total_cost_after
df[iter,5] = total_cash_cost - min(total_cash_cost, 1150)
if(min(total_cash_cost, 1150) < 1150){df[iter,6] = 1150 - total_cash_cost }
else{df[iter,6] = 0}
}
}
table <- insight::export_table(insight::format_table(df))
sorted_df <- df[order(df$total_cost,df$total_out_of_pocket_cash ),]
sorted_table <- insight::export_table(insight::format_table(sorted_df))
optimal_set <- list(nights = nights, total_cost  = sorted_df[1,4],  total_out_of_pocket_cash = sorted_df[1,5], used_up = sorted_df[1,6])
res_list <- list(data = df, sorted_summary = sorted_table, best = optimal_set)
return(res_list)
}
air_pv <- 20000*0.015+5.6
air_cash <- 547
daily_hotel_pv <- 145
daily_hotel_cash <- 258
iter <- 0
nights <- 15
nights_seq <- c(2:nights)
total_cost_seq <- rep(0,length(nights_seq))
total_daily_cost_seq <- rep(0,length(nights_seq))
total_out_of_pocket <- rep(0,length(nights_seq))
for(i in nights_seq){
iter <- iter + 1
res_list <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights = i)
total_cost_seq[iter] <- res_list$best$total_cost
total_daily_cost_seq[iter] <- res_list$best$total_cost/i
total_out_of_pocket[iter] <- res_list$best$total_out_of_pocket_cash
}
plot(nights_seq, total_daily_cost_seq,type = 'b',col = 'blue')
lines(nights_seq,total_out_of_pocket, type = 'b',col = 'red')
legend(10, 95, legend=c("daily_cost_after_reimb", "total_out_of_pocket_cash"),
col=c("blue", "red"), lty=1:2, cex=1)
nights <- 7
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
result$best
rm(list = ls())
library(insight)
find_optimal <- function(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights){
df <- data.frame(0,0,0,0,0,0)
colnames(df) <- c('air_type(1 for cash)', 'cash_nights', 'point_nights', 'total_cost_after_reimb','total_out_of_pocket_cash', 'reimb_balance')
iter <- 0
for(air_type in 0:1){
air_cost <- air_type * air_cash + (1-air_type) * air_pv
for(cash_nights in 0:nights){
iter <- iter + 1
hotel_cost <- cash_nights*daily_hotel_cash + (nights - cash_nights) * daily_hotel_pv
total_cost_before <- air_cost + hotel_cost
total_cash_cost <- air_type * air_cash + cash_nights * daily_hotel_cash
total_cost_after <- total_cost_before - min(total_cash_cost, 1150)
df[iter,1] = air_type
df[iter,2] = cash_nights
df[iter,3] = nights - cash_nights
df[iter,4] = total_cost_after
df[iter,5] = total_cash_cost - min(total_cash_cost, 1150)
if(min(total_cash_cost, 1150) < 1150){df[iter,6] = 1150 - total_cash_cost }
else{df[iter,6] = 0}
}
}
table <- insight::export_table(insight::format_table(df))
sorted_df <- df[order(df$total_cost,df$total_out_of_pocket_cash ),]
sorted_table <- insight::export_table(insight::format_table(sorted_df))
optimal_set <- list(nights = nights, total_cost  = sorted_df[1,4],  total_out_of_pocket_cash = sorted_df[1,5], used_up = sorted_df[1,6])
res_list <- list(data = df, sorted_summary = sorted_table, best = optimal_set)
return(res_list)
}
air_pv <- 20000*0.015+5.6
air_cash <- 547
daily_hotel_pv <- 145
daily_hotel_cash <- 258
iter <- 0
nights <- 15
nights_seq <- c(2:nights)
total_cost_seq <- rep(0,length(nights_seq))
total_daily_cost_seq <- rep(0,length(nights_seq))
total_out_of_pocket <- rep(0,length(nights_seq))
for(i in nights_seq){
iter <- iter + 1
res_list <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights = i)
total_cost_seq[iter] <- res_list$best$total_cost
total_daily_cost_seq[iter] <- res_list$best$total_cost/i
total_out_of_pocket[iter] <- res_list$best$total_out_of_pocket_cash
}
plot(nights_seq, total_daily_cost_seq,type = 'b',col = 'blue')
lines(nights_seq,total_out_of_pocket, type = 'b',col = 'red')
legend(10, 95, legend=c("daily_cost_after_reimb", "total_out_of_pocket_cash"),
col=c("blue", "red"), lty=1:2, cex=1)
nights <- 8
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
result$best
nights <- 15
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
result$best
nights <- 12
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
nights <- 9
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
result$best
nights <- 10
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
nights <- 9
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
nights <- 10
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
nights <- 8
result <- find_optimal(air_pv, air_cash, daily_hotel_pv, daily_hotel_cash, nights)
result$sorted_summary
