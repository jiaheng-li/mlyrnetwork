### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
else if(iid_dyad[i,1] == iid_dyad[i,2]){
iid_dyad <- iid_dyad[-i,]
i <- i-1
print(i)
}
}
### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
else if(iid_dyad[i,1] == iid_dyad[i,2]){
iid_dyad <- iid_dyad[-i,]
i <- i-1
print(i)
}
}
### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad[,1] == iid_dyad[,2]
iid_dyad[iid_dyad[,1] == iid_dyad[,2],]
?where
?as.where
?as.which
?which
?unique
which(iid_dyad[,1] == iid_dyad[,2] )
iid_dyad[44,]
iid_dyad[which(iid_dyad[,1] == iid_dyad[,2] ),]
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2] ),]
iid_dyad
which(iid_dyad[,1] == iid_dyad[,2] )
729-518
211/518
sample(2,4)
sample(4,4)
sample(4,1)
sample(4,2)
?sample
cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
randi(1)
runif()
runif(1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
sample(2,1)
a=c(1,2,3)
a
a=a[-1]
a
which(a==1)
which(a==2)
e <- sample(2,1)
sample(a,e)
e <- sample(2,1)
sample(a,e)
### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],sample(a,e)))
}
}
warnings()
c(iid_dyad[i,1],iid_dyad[i,2],sample(a,e))
e2 <- sample(a,e)
e2
for(j in e2){}
print(j)
for(j in e2){print(j)}
e <- sample(2,1)
e2 <- sample(a,e)
for(j in e2){print(j)}
### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
e2 <- sample(a,e)
for(j in e2){
rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
e2 <- sample(a,e)
for(j in e2){
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
e2
c(iid_dyad[i,1],iid_dyad[i,2],j)
i=1
c(iid_dyad[i,1],iid_dyad[i,2],j)
rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
e2 <- sample(a,e)
for(j in e2){
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
### Sample iid dyads ###
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
e2 <- sample(a,e)
for(j in e2){
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
### Sample iid dyads ###
rm(list = ls())
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
e2 <- sample(a,e)
for(j in e2){
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
iid_dyad
comp_inner_prod(iid_dyad)
data=iid_dyad
k <- max(data[,3])
N <- max(data)
unique_dyads <- unique(data[,1:2])
n2 <- length(unique_dyads[,1])
dyad_vec <- matrix(0,n2,k+2)
n1 <- length(data[,1])
ind1 <- data[1,1]
ind2 <- data[1,2]
dyad_ind <- 1
for(i in 1:n1){
if(ind1 == data[i,1] & ind2 == data[i,2]){
dyad_vec[dyad_ind,1] <- ind1
dyad_vec[dyad_ind,2] <- ind2
dyad_vec[dyad_ind,data[i,3]+2] <- 1
}
else{
dyad_ind <- dyad_ind + 1
ind1 <- data[i,1]
ind2 <- data[i,2]
dyad_vec[dyad_ind,1] <- ind1
dyad_vec[dyad_ind,2] <- ind2
#dyad_ind <- data[i,2] - data[i,1] + (N-1 + (N-data[i,1]+1)* (data[i,1]!=2)) * (data[i,1]-1) / (2/((data[i,1]==2)+1))  * (data[i,1]!=1)
dyad_vec[dyad_ind,data[i,3]+2] <- 1
}
}
dyad_vex
dyad_vec
ind1 == data[i,1] & ind2 == data[i,2]
dyad_vec[dyad_ind,1] <- ind1
dyad_vec[dyad_ind,1] <- ind1
dyad_vec[dyad_ind,1] <- ind1
iid_dyad[order(iid_dyad[,1])]
iid_dyad[order(iid_dyad[,1]),]
iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
### Sample iid dyads ###
rm(list = ls())
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
iter<-0
e2 <- sample(a,e)
for(j in e2){
iter <- iter + 1
if(iter > 2){print(iter)}
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
### Sample iid dyads ###
rm(list = ls())
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- unique(iid_dyad[,1:2])
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
iter<-0
e2 <- sample(a,e)
for(j in e2){
iter <- iter + 1
if(iter > 2){print(iter)}
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
a = matrix(0,2,2)
a
rbind(a,c(1,2))
comp_inner_prod(iid_dyad)
iid_dyad
### Sample iid dyads ###
rm(list = ls())
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- unique(iid_dyad[,1:2])
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
iter<-0
e2 <- sample(a,e)
for(j in e2){
iter <- iter + 1
if(iter > 2){print(iter)}
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
iid_dyad <- iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
iid_dyad
comp_inner_prod(iid_dyad)
dyad_ip <- comp_inner_prod(iid_dyad)
x1 <- dyad_ip$neighboring_inner_prod
x2 <- dyad_ip$non_neighboring_inner_prod
ks.test(x1,x2)
plot(ecdf(x1),
xlim = range(c(x1, x2)),
col = "blue")
plot(ecdf(x2),
add = TRUE,
lty = "dashed",
col = "red")
data = Lazega_lawyer_network
k <- max(data[,3])
N <- max(data)
unique_dyads <- unique(data[,1:2])
unique_dyads
iid_dyad
############################################################
rm(list = ls())
setwd("C:/Users/ljhhe/OneDrive - Florida State University/GitHub/mlyrnetwork")
library("devtools")
devtools::document()
set.seed(123456)
seed <- sample(1:9999999,1,replace = FALSE)
N <- 50 # number of nodes
## Parameter settings
burnin <- 100
k <- 3  # number of layers, okay to change
H <- 2  # highest order of interactions, okay to change (<= k)
mdim <- 0
for(i in 1:H){
mdim <- mdim + choose(k,i)
}
intv <- 3 # sampling iterval
iter_max <- 30000 # maximum iterations for estimation
dyads <- 1000
# generate stochastic block model basis as an example
# can be set to 'Ber', 'LSM' and 'other'
mterm <- 'BER'
gy <- dyads / choose(N,2)
# set basis network arguments for SBM basis
basis_arguments <- c(gy, seed)
# generate theta for layers
params <- matrix(runif(mdim,-1,1),1,mdim)
params[,c(3,6)] = 0
theta <- params[1,]
mlnet <- samp_ml(theta,N = N, k = k, H = H ,mdim = mdim, seed = seed, mterm = mterm, basis_arguments = basis_arguments)
rm(list = ls())
setwd("C:/Users/ljhhe/OneDrive - Florida State University/GitHub/mlyrnetwork")
library("devtools")
devtools::document()
set.seed(123456)
seed <- sample(1:9999999,1,replace = FALSE)
N <- 50 # number of nodes
## Parameter settings
burnin <- 100
k <- 3  # number of layers, okay to change
H <- 2  # highest order of interactions, okay to change (<= k)
mdim <- 0
for(i in 1:H){
mdim <- mdim + choose(k,i)
}
intv <- 3 # sampling iterval
iter_max <- 30000 # maximum iterations for estimation
dyads <- 1000
# generate stochastic block model basis as an example
# can be set to 'Ber', 'LSM' and 'other'
mterm <- 'BER'
gy <- dyads / choose(N,2)
# set basis network arguments for SBM basis
basis_arguments <- c(gy, seed)
# generate theta for layers
params <- matrix(runif(mdim,-1,1),1,mdim)
params[,c(3,6)] = 0
theta <- params[1,]
mlnet <- samp_ml(theta,N = N, k = k, H = H ,mdim = mdim, seed = seed, mterm = mterm, basis_arguments = basis_arguments)
summary_sim(mlnet)
## Sample and estimate the multilayer network sampled above
estimates <- est_ml(NetMat = mlnet$net, N = N, k = k, H = H, mdim = mdim, mterm = mterm,
seed = seed, basis_arguments = basis_arguments)
summary_est(estimates)
sim_est_res <- sim_est(theta,N = N, k = k, H = H, mdim = mdim, mterm = mterm,
seed = seed,basis_arguments =basis_arguments)
summary_sim(sim_est_res)
summary_est(sim_est_res)
### Sample iid dyads ###
rm(list = ls())
N <- 71
iid_dyad <- matrix(sample(N, 2*0.2*choose(N,2), replace = TRUE),ncol = 2)
for(i in 1:length(iid_dyad[,1])){
if(iid_dyad[i,1] > iid_dyad[i,2]){
t = iid_dyad[i,1]
iid_dyad[i,1] = iid_dyad[i,2]
iid_dyad[i,2] <- t
}
}
iid_dyad <- iid_dyad[-which(iid_dyad[,1] == iid_dyad[,2]),]
iid_dyad <- unique(iid_dyad[,1:2])
iid_dyad <- cbind(iid_dyad,sample(3,length(iid_dyad[,1]),replace = TRUE))
for(i in 1:length(iid_dyad[,1])){
if(runif(1) < 0.3){
e <- sample(2,1)
a <- c(1,2,3)
a <- a[-which(a == iid_dyad[i,3])]
iter<-0
e2 <- sample(a,e)
for(j in e2){
iter <- iter + 1
if(iter > 2){print(iter)}
iid_dyad <- rbind(iid_dyad,c(iid_dyad[i,1],iid_dyad[i,2],j))
}
}
}
iid_dyad <- iid_dyad[order(iid_dyad[,1],iid_dyad[,2]),]
dyad_ip <- comp_inner_prod(iid_dyad)
x1 <- dyad_ip$neighboring_inner_prod
x2 <- dyad_ip$non_neighboring_inner_prod
ks.test(x1,x2)
plot(ecdf(x1),
xlim = range(c(x1, x2)),
col = "blue")
plot(ecdf(x2),
add = TRUE,
lty = "dashed",
col = "red")
lazega_ip <- comp_inner_prod()
y1 <- lazega_ip$neighboring_inner_prod
y2 <- lazega_ip$non_neighboring_inner_prod
ks.test(y1,y2)
ks.test(x1,y1)
ks.test(x2,y2)
plot(ecdf(x1),
xlim = range(c(x1, y1)),
col = "blue")
plot(ecdf(y1),
add = TRUE,
lty = "dashed",
col = "red")
plot(ecdf(x2),
xlim = range(c(x2, y2)),
col = "blue")
plot(ecdf(y2),
add = TRUE,
lty = "dashed",
col = "red")
