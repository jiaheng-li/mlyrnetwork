#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[3]] <- ggnet2(net, node.size = 3, node.color = node_colors[3], mode = c("x", "y") ) +
#     labs(title = paste0("LSM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
#
#
# # Generate ERGM
# N <- 75
# theta <- c(-3.25, .5, .5)
#
# ## Generate the ERGM
# for(i in c(1:1)){
#   net <- simulate(network.initialize(N, directed = FALSE) ~ edges + gwesp,
#                   coef = theta,
#                   control = control.simulate(MCMC.burnin = 3e+6))
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[1]] <- ggnet2(net, node.size = 3, node.color = node_colors[1], mode = c("x", "y") ) +
#     labs(title = paste0("ERGM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
# ## Arrange all 3 networks in one plot
# ggarrange(fig[[1]],fig[[2]],fig[[3]],ncol = 3, nrow = 1)
#
#
rm(list = ls())
library(ergm)
library(GGally)
library(latentnet)
library(ggplot2)
library(ggpubr)
require(grid)
library(reshape2)
library(sna)
## Create figure handles for each of the network
fig <- vector("list",length = 1*3)
node_colors <- c("orange","blue","purple")
set.seed(202411)
# Generate Latent Space Model (d = 2)
N <- 75
theta <- -0.6
pos <- t(sapply(1:N, function(x) { rnorm(2,mean = 0, sd = 1.5) }))
gen_lsm <- function(N, theta, pos) {
net <- matrix(0, nrow = N, ncol = N)
for (i in 1:(N-1)) {
for (j in (i+1):N) {
odds <- theta - 1.5*norm(pos[i,] - pos[j, ], type = "2")
p <- exp(odds) / (1 + exp(odds))
net[i, j] <- rbinom(1, 1, p)
net[j, i] <- net[i, j]
}
}
net <- as.network(net, directed = FALSE)
return(net)
}
## Generate 3 layers of LSM
for(i in c(1:3)){
net <- gen_lsm(N, theta, pos)
# ## x is the position of each node, use this for all networks
if(i == 1){
#x = gplot.layout.fruchtermanreingold(net, NULL)
x = pos
}
## Draw the SBM network, use "mode" argument to control the node position
net %v% "x" = x[, 1]
net %v% "y" = x[, 2]
fig[[i]] <- ggnet2(net, node.size = 3, node.color = node_colors[i], mode = c("x", "y") ) +
#labs(title = paste0("Layer ", as.character(i))) +  ## Change the graph title here
theme(plot.title = element_text(hjust = 0.5,size = 30))   ## Change the font size here
}
## Arrange all 3 networks in one plot
ggarrange(fig[[1]],fig[[2]],fig[[3]],ncol = 3, nrow = 1)
net
# Generate ERGM
N <- 75
theta <- c(-3.6, 0.6, 0.3)
## Generate 3 layers of ERGM
for(i in c(1:3)){
net <- simulate(network.initialize(N, directed = FALSE) ~ edges + gwesp,
coef = theta,
control = control.simulate(MCMC.burnin = 3e+6))
## x is the position of each node, use this for all networks
## Use the same node position as LSM
# if(i == 1){
#   x = gplot.layout.fruchtermanreingold(net, NULL)
#
# }
## Draw the SBM network, use "mode" argument to control the node position
net %v% "x" = x[, 1]
net %v% "y" = x[, 2]
fig[[i+3]] <- ggnet2(net, node.size = 3, node.color = node_colors[i], mode = c("x", "y") ) +
#labs(title = paste0("Layer ", as.character(i))) +  ## Change the graph title here
theme(plot.title = element_text(hjust = 0.5,size = 30))   ## Change the font size here
}
## Arrange all 3 networks in one plot
ggarrange(fig[[4]],fig[[5]],fig[[6]],ncol = 3, nrow = 1)
net
# Generate SBM with K = 3 blocks
N <- 75
node_membs <- c(rep(1, 25), rep(2, 25), rep(3, 25))
p_within <- .2
p_between <- .002
gen_sbm <- function(N, node_membs, p_within, p_between) {
net <- matrix(0, nrow = N, ncol = N)
for (i in 1:(N-1)) {
for (j in (i+1):N) {
net[i, j] <- rbinom(1, 1, ifelse(node_membs[i] == node_membs[j], p_within, p_between))
net[j, i] <- net[i, j]
}
}
net <- as.network(net, directed = FALSE)
return(net)
}
## Generate 3 layers of SBM
for(i in c(1:3)){
net <- gen_sbm(N, node_membs, p_within, p_between)
## x is the position of each node, use this for all networks
if(i == 1){
x = gplot.layout.fruchtermanreingold(net, NULL)
}
## Draw the SBM network, use "mode" argument to control the node position
net %v% "x" = x[, 1]
net %v% "y" = x[, 2]
fig[[i+6]] <- ggnet2(net, node.size = 3, node.color = node_colors[i], mode = c("x", "y") ) +
#labs(title = paste0("Layer ", as.character(i))) +  ## Change the graph title here
theme(plot.title = element_text(hjust = 0.5,size = 30))   ## Change the font size here
}
## Arrange all 3 networks in one plot
ggarrange(fig[[7]],fig[[8]],fig[[9]],ncol = 3, nrow = 1)
net
figlist <- list()
for(i in 1:9){
figlist <- append(figlist, list(fig[[i]]))
}
## Arrange all 9 graphs in one plot
commonplot <- ggarrange(plotlist = figlist,ncol = 3, nrow = 3)
annotate_figure(commonplot,
top = text_grob("Layer 1                                                                        Layer 2                                                                  Layer 3      ",size = 14),
left = text_grob("  SBM Basis                  ERGM Basis             LSM Basis       ",size = 14,rot = 90)
)
#
#
# ### Create 3 graphs for 3 different basis structures
# ## Create figure handles for each of the network
# fig <- vector("list",length = 3*1)
# node_colors <- c("orange","blue","purple")
#
# # Generate SBM with K = 3 blocks
# N <- 75
# node_membs <- c(rep(1, 25), rep(2, 25), rep(3, 25))
# p_within <- .25
# p_between <- .01
#
# gen_sbm <- function(N, node_membs, p_within, p_between) {
#   net <- matrix(0, nrow = N, ncol = N)
#   for (i in 1:(N-1)) {
#     for (j in (i+1):N) {
#       net[i, j] <- rbinom(1, 1, ifelse(node_membs[i] == node_membs[j], p_within, p_between))
#       net[j, i] <- net[i, j]
#     }
#   }
#   net <- as.network(net, directed = FALSE)
#   return(net)
# }
#
#
#
# ## Generate SBM
# for(i in c(1:1)){
#   net <- gen_sbm(N, node_membs, p_within, p_between)
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[2]] <- ggnet2(net, node.size = 3, node.color = node_colors[2], mode = c("x", "y") ) +
#     labs(title = paste0("SBM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
#
# ## Generate LSM
# N <- 75
# theta <- -1
# pos <- t(sapply(1:N, function(x) { rnorm(2) }))
#
# gen_lsm <- function(N, theta, pos) {
#   net <- matrix(0, nrow = N, ncol = N)
#   for (i in 1:(N-1)) {
#     for (j in (i+1):N) {
#       odds <- theta - norm(pos[i,] - pos[j, ], type = "2")
#       p <- exp(odds) / (1 + exp(odds))
#       net[i, j] <- rbinom(1, 1, p)
#       net[j, i] <- net[i, j]
#     }
#   }
#   net <- as.network(net, directed = FALSE)
#   return(net)
# }
#
# for(i in c(1:1)){
#   net <- gen_lsm(N, theta, pos)
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[3]] <- ggnet2(net, node.size = 3, node.color = node_colors[3], mode = c("x", "y") ) +
#     labs(title = paste0("LSM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
#
#
# # Generate ERGM
# N <- 75
# theta <- c(-3.25, .5, .5)
#
# ## Generate the ERGM
# for(i in c(1:1)){
#   net <- simulate(network.initialize(N, directed = FALSE) ~ edges + gwesp,
#                   coef = theta,
#                   control = control.simulate(MCMC.burnin = 3e+6))
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[1]] <- ggnet2(net, node.size = 3, node.color = node_colors[1], mode = c("x", "y") ) +
#     labs(title = paste0("ERGM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
# ## Arrange all 3 networks in one plot
# ggarrange(fig[[1]],fig[[2]],fig[[3]],ncol = 3, nrow = 1)
#
#
rm(list = ls())
library(ergm)
library(GGally)
library(latentnet)
library(ggplot2)
library(ggpubr)
require(grid)
library(reshape2)
library(sna)
## Create figure handles for each of the network
fig <- vector("list",length = 1*3)
node_colors <- c("orange","blue","purple")
set.seed(202411)
# Generate Latent Space Model (d = 2)
N <- 75
theta <- -0.6
pos <- t(sapply(1:N, function(x) { rnorm(2,mean = 0, sd = 1.5) }))
gen_lsm <- function(N, theta, pos) {
net <- matrix(0, nrow = N, ncol = N)
for (i in 1:(N-1)) {
for (j in (i+1):N) {
odds <- theta - 1.5*norm(pos[i,] - pos[j, ], type = "2")
p <- exp(odds) / (1 + exp(odds))
net[i, j] <- rbinom(1, 1, p)
net[j, i] <- net[i, j]
}
}
net <- as.network(net, directed = FALSE)
return(net)
}
## Generate 3 layers of LSM
for(i in c(1:3)){
net <- gen_lsm(N, theta, pos)
# ## x is the position of each node, use this for all networks
if(i == 1){
#x = gplot.layout.fruchtermanreingold(net, NULL)
x = pos
}
## Draw the SBM network, use "mode" argument to control the node position
net %v% "x" = x[, 1]
net %v% "y" = x[, 2]
fig[[i]] <- ggnet2(net, node.size = 3, node.color = node_colors[i], mode = c("x", "y") ) +
#labs(title = paste0("Layer ", as.character(i))) +  ## Change the graph title here
theme(plot.title = element_text(hjust = 0.5,size = 30))   ## Change the font size here
}
## Arrange all 3 networks in one plot
ggarrange(fig[[1]],fig[[2]],fig[[3]],ncol = 3, nrow = 1)
net
# Generate ERGM
N <- 75
theta <- c(-4, 0.6, 0.3)
## Generate 3 layers of ERGM
for(i in c(1:3)){
net <- simulate(network.initialize(N, directed = FALSE) ~ edges + gwesp,
coef = theta,
control = control.simulate(MCMC.burnin = 3e+6))
## x is the position of each node, use this for all networks
## Use the same node position as LSM
# if(i == 1){
#   x = gplot.layout.fruchtermanreingold(net, NULL)
#
# }
## Draw the SBM network, use "mode" argument to control the node position
net %v% "x" = x[, 1]
net %v% "y" = x[, 2]
fig[[i+3]] <- ggnet2(net, node.size = 3, node.color = node_colors[i], mode = c("x", "y") ) +
#labs(title = paste0("Layer ", as.character(i))) +  ## Change the graph title here
theme(plot.title = element_text(hjust = 0.5,size = 30))   ## Change the font size here
}
## Arrange all 3 networks in one plot
ggarrange(fig[[4]],fig[[5]],fig[[6]],ncol = 3, nrow = 1)
net
# Generate SBM with K = 3 blocks
N <- 75
node_membs <- c(rep(1, 25), rep(2, 25), rep(3, 25))
p_within <- .2
p_between <- .002
gen_sbm <- function(N, node_membs, p_within, p_between) {
net <- matrix(0, nrow = N, ncol = N)
for (i in 1:(N-1)) {
for (j in (i+1):N) {
net[i, j] <- rbinom(1, 1, ifelse(node_membs[i] == node_membs[j], p_within, p_between))
net[j, i] <- net[i, j]
}
}
net <- as.network(net, directed = FALSE)
return(net)
}
## Generate 3 layers of SBM
for(i in c(1:3)){
net <- gen_sbm(N, node_membs, p_within, p_between)
## x is the position of each node, use this for all networks
if(i == 1){
x = gplot.layout.fruchtermanreingold(net, NULL)
}
## Draw the SBM network, use "mode" argument to control the node position
net %v% "x" = x[, 1]
net %v% "y" = x[, 2]
fig[[i+6]] <- ggnet2(net, node.size = 3, node.color = node_colors[i], mode = c("x", "y") ) +
#labs(title = paste0("Layer ", as.character(i))) +  ## Change the graph title here
theme(plot.title = element_text(hjust = 0.5,size = 30))   ## Change the font size here
}
## Arrange all 3 networks in one plot
ggarrange(fig[[7]],fig[[8]],fig[[9]],ncol = 3, nrow = 1)
net
figlist <- list()
for(i in 1:9){
figlist <- append(figlist, list(fig[[i]]))
}
## Arrange all 9 graphs in one plot
commonplot <- ggarrange(plotlist = figlist,ncol = 3, nrow = 3)
annotate_figure(commonplot,
top = text_grob("Layer 1                                                                        Layer 2                                                                  Layer 3      ",size = 14),
left = text_grob("  SBM Basis                  ERGM Basis             LSM Basis       ",size = 14,rot = 90)
)
#
#
# ### Create 3 graphs for 3 different basis structures
# ## Create figure handles for each of the network
# fig <- vector("list",length = 3*1)
# node_colors <- c("orange","blue","purple")
#
# # Generate SBM with K = 3 blocks
# N <- 75
# node_membs <- c(rep(1, 25), rep(2, 25), rep(3, 25))
# p_within <- .25
# p_between <- .01
#
# gen_sbm <- function(N, node_membs, p_within, p_between) {
#   net <- matrix(0, nrow = N, ncol = N)
#   for (i in 1:(N-1)) {
#     for (j in (i+1):N) {
#       net[i, j] <- rbinom(1, 1, ifelse(node_membs[i] == node_membs[j], p_within, p_between))
#       net[j, i] <- net[i, j]
#     }
#   }
#   net <- as.network(net, directed = FALSE)
#   return(net)
# }
#
#
#
# ## Generate SBM
# for(i in c(1:1)){
#   net <- gen_sbm(N, node_membs, p_within, p_between)
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[2]] <- ggnet2(net, node.size = 3, node.color = node_colors[2], mode = c("x", "y") ) +
#     labs(title = paste0("SBM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
#
# ## Generate LSM
# N <- 75
# theta <- -1
# pos <- t(sapply(1:N, function(x) { rnorm(2) }))
#
# gen_lsm <- function(N, theta, pos) {
#   net <- matrix(0, nrow = N, ncol = N)
#   for (i in 1:(N-1)) {
#     for (j in (i+1):N) {
#       odds <- theta - norm(pos[i,] - pos[j, ], type = "2")
#       p <- exp(odds) / (1 + exp(odds))
#       net[i, j] <- rbinom(1, 1, p)
#       net[j, i] <- net[i, j]
#     }
#   }
#   net <- as.network(net, directed = FALSE)
#   return(net)
# }
#
# for(i in c(1:1)){
#   net <- gen_lsm(N, theta, pos)
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[3]] <- ggnet2(net, node.size = 3, node.color = node_colors[3], mode = c("x", "y") ) +
#     labs(title = paste0("LSM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
#
#
# # Generate ERGM
# N <- 75
# theta <- c(-3.25, .5, .5)
#
# ## Generate the ERGM
# for(i in c(1:1)){
#   net <- simulate(network.initialize(N, directed = FALSE) ~ edges + gwesp,
#                   coef = theta,
#                   control = control.simulate(MCMC.burnin = 3e+6))
#
#   ## x is the position of each node, use this for all networks
#   if(i == 1){
#     x = gplot.layout.fruchtermanreingold(net, NULL)
#
#   }
#
#   ## Draw the SBM network, use "mode" argument to control the node position
#   net %v% "x" = x[, 1]
#   net %v% "y" = x[, 2]
#   fig[[1]] <- ggnet2(net, node.size = 3, node.color = node_colors[1], mode = c("x", "y") ) +
#     labs(title = paste0("ERGM Basis")) +  ## Change the graph title here
#     theme(plot.title = element_text(hjust = 0.5,size = 20))   ## Change the font size here
# }
#
# ## Arrange all 3 networks in one plot
# ggarrange(fig[[1]],fig[[2]],fig[[3]],ncol = 3, nrow = 1)
#
#
pos
rm(list = ls())
setwd("C:/Users/ljhhe/OneDrive - Florida State University/GitHub/mlyrnetwork")
#usethis::use_package("expm")
library("devtools")
devtools::document()
## Examples of data analysis using the Lazega lawyer network data set
obs <- compute_suffstats_Lazega() # compute the observed sufficient statistics from the Lazega network.
# compute the basis network of Lazega
unique_dyads <- unique(Lazega_lawyer_network[,1:2])
unique_dyads_vec <- as.vector(t(unique_dyads))
# estimate ERGM model parameters using MPLE.
data_res <- est_ml(NetMat = Lazega_lawyer_network, N = 71, k = 3, H = 2, mdim = 6, mterm = 'other',
seed = seed, basis_arguments = unique_dyads_vec)
set.seed(123456)
seed <- sample(1:9999999,1,replace = FALSE)
# estimate ERGM model parameters using MPLE.
data_res <- est_ml(NetMat = Lazega_lawyer_network, N = 71, k = 3, H = 2, mdim = 6, mterm = 'other',
seed = seed, basis_arguments = unique_dyads_vec)
summary_est(data_res)
data_res$mple_sd
